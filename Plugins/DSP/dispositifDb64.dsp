declare name        "objMatrixdispositifDb64"; // modifier le nom de votre greffon
declare version     "1.0";
declare author      "D.Blanchemain";
declare license     "BSD";
declare copyright   "(c)D.Blanchemain 2020";
import("stdfaust.lib");
Matrix(N,M) =_:filters(1):delay:freeverb(1)<: par(out, M, *(Fader(1,out): si.smoo)) :> par(out, M, _)
with {
tabSpeakerX(0)=-0.500;
tabSpeakerY(0)=-1.000;
tabSpeakerZ(0)=1.000;
tabSpeakerD(0)=1.500;
tabSpeakerX(1)=0.000;
tabSpeakerY(1)=-1.000;
tabSpeakerZ(1)=1.000;
tabSpeakerD(1)=1.414;
tabSpeakerX(2)=0.500;
tabSpeakerY(2)=-1.000;
tabSpeakerZ(2)=1.000;
tabSpeakerD(2)=1.500;
tabSpeakerX(3)=1.000;
tabSpeakerY(3)=-1.000;
tabSpeakerZ(3)=1.000;
tabSpeakerD(3)=1.732;
tabSpeakerX(4)=1.000;
tabSpeakerY(4)=-1.000;
tabSpeakerZ(4)=0.500;
tabSpeakerD(4)=1.500;
tabSpeakerX(5)=1.000;
tabSpeakerY(5)=-1.000;
tabSpeakerZ(5)=0.000;
tabSpeakerD(5)=1.414;
tabSpeakerX(6)=1.000;
tabSpeakerY(6)=-1.000;
tabSpeakerZ(6)=-0.500;
tabSpeakerD(6)=1.500;
tabSpeakerX(7)=1.000;
tabSpeakerY(7)=-1.000;
tabSpeakerZ(7)=-1.000;
tabSpeakerD(7)=1.732;
tabSpeakerX(8)=0.501;
tabSpeakerY(8)=-1.000;
tabSpeakerZ(8)=-1.000;
tabSpeakerD(8)=1.500;
tabSpeakerX(9)=0.000;
tabSpeakerY(9)=-1.000;
tabSpeakerZ(9)=-1.000;
tabSpeakerD(9)=1.414;
tabSpeakerX(10)=-0.500;
tabSpeakerY(10)=-1.000;
tabSpeakerZ(10)=-1.000;
tabSpeakerD(10)=1.500;
tabSpeakerX(11)=-1.000;
tabSpeakerY(11)=-1.000;
tabSpeakerZ(11)=-1.000;
tabSpeakerD(11)=1.732;
tabSpeakerX(12)=-1.000;
tabSpeakerY(12)=-1.000;
tabSpeakerZ(12)=-0.500;
tabSpeakerD(12)=1.500;
tabSpeakerX(13)=-1.000;
tabSpeakerY(13)=-1.000;
tabSpeakerZ(13)=0.000;
tabSpeakerD(13)=1.414;
tabSpeakerX(14)=-1.000;
tabSpeakerY(14)=-1.000;
tabSpeakerZ(14)=0.500;
tabSpeakerD(14)=1.500;
tabSpeakerX(15)=-1.000;
tabSpeakerY(15)=-1.000;
tabSpeakerZ(15)=1.000;
tabSpeakerD(15)=1.732;
tabSpeakerX(16)=-0.500;
tabSpeakerY(16)=-0.180;
tabSpeakerZ(16)=1.000;
tabSpeakerD(16)=1.132;
tabSpeakerX(17)=0.000;
tabSpeakerY(17)=-0.180;
tabSpeakerZ(17)=1.000;
tabSpeakerD(17)=1.016;
tabSpeakerX(18)=0.500;
tabSpeakerY(18)=-0.180;
tabSpeakerZ(18)=1.000;
tabSpeakerD(18)=1.132;
tabSpeakerX(19)=1.000;
tabSpeakerY(19)=-0.180;
tabSpeakerZ(19)=1.000;
tabSpeakerD(19)=1.426;
tabSpeakerX(20)=1.000;
tabSpeakerY(20)=-0.180;
tabSpeakerZ(20)=0.500;
tabSpeakerD(20)=1.132;
tabSpeakerX(21)=1.000;
tabSpeakerY(21)=-0.180;
tabSpeakerZ(21)=0.000;
tabSpeakerD(21)=1.016;
tabSpeakerX(22)=1.000;
tabSpeakerY(22)=-0.180;
tabSpeakerZ(22)=-0.500;
tabSpeakerD(22)=1.132;
tabSpeakerX(23)=1.000;
tabSpeakerY(23)=-0.180;
tabSpeakerZ(23)=-1.000;
tabSpeakerD(23)=1.426;
tabSpeakerX(24)=0.501;
tabSpeakerY(24)=-0.180;
tabSpeakerZ(24)=-1.000;
tabSpeakerD(24)=1.133;
tabSpeakerX(25)=0.000;
tabSpeakerY(25)=-0.180;
tabSpeakerZ(25)=-1.000;
tabSpeakerD(25)=1.016;
tabSpeakerX(26)=-0.500;
tabSpeakerY(26)=-0.180;
tabSpeakerZ(26)=-1.000;
tabSpeakerD(26)=1.132;
tabSpeakerX(27)=-1.000;
tabSpeakerY(27)=-0.180;
tabSpeakerZ(27)=-1.000;
tabSpeakerD(27)=1.426;
tabSpeakerX(28)=-1.000;
tabSpeakerY(28)=-0.180;
tabSpeakerZ(28)=-0.500;
tabSpeakerD(28)=1.132;
tabSpeakerX(29)=-1.000;
tabSpeakerY(29)=-0.180;
tabSpeakerZ(29)=0.000;
tabSpeakerD(29)=1.016;
tabSpeakerX(30)=-1.000;
tabSpeakerY(30)=-0.180;
tabSpeakerZ(30)=0.500;
tabSpeakerD(30)=1.132;
tabSpeakerX(31)=-1.000;
tabSpeakerY(31)=-0.180;
tabSpeakerZ(31)=1.000;
tabSpeakerD(31)=1.426;
tabSpeakerX(32)=-0.500;
tabSpeakerY(32)=0.620;
tabSpeakerZ(32)=1.000;
tabSpeakerD(32)=1.278;
tabSpeakerX(33)=0.000;
tabSpeakerY(33)=0.620;
tabSpeakerZ(33)=1.000;
tabSpeakerD(33)=1.177;
tabSpeakerX(34)=0.500;
tabSpeakerY(34)=0.620;
tabSpeakerZ(34)=1.000;
tabSpeakerD(34)=1.278;
tabSpeakerX(35)=1.000;
tabSpeakerY(35)=0.620;
tabSpeakerZ(35)=1.000;
tabSpeakerD(35)=1.544;
tabSpeakerX(36)=1.000;
tabSpeakerY(36)=0.620;
tabSpeakerZ(36)=0.500;
tabSpeakerD(36)=1.278;
tabSpeakerX(37)=1.000;
tabSpeakerY(37)=0.620;
tabSpeakerZ(37)=0.000;
tabSpeakerD(37)=1.177;
tabSpeakerX(38)=1.000;
tabSpeakerY(38)=0.620;
tabSpeakerZ(38)=-0.500;
tabSpeakerD(38)=1.278;
tabSpeakerX(39)=1.000;
tabSpeakerY(39)=0.620;
tabSpeakerZ(39)=-1.000;
tabSpeakerD(39)=1.544;
tabSpeakerX(40)=0.501;
tabSpeakerY(40)=0.620;
tabSpeakerZ(40)=-1.000;
tabSpeakerD(40)=1.279;
tabSpeakerX(41)=0.000;
tabSpeakerY(41)=0.620;
tabSpeakerZ(41)=-1.000;
tabSpeakerD(41)=1.177;
tabSpeakerX(42)=-0.500;
tabSpeakerY(42)=0.620;
tabSpeakerZ(42)=-1.000;
tabSpeakerD(42)=1.278;
tabSpeakerX(43)=-1.000;
tabSpeakerY(43)=0.620;
tabSpeakerZ(43)=-1.000;
tabSpeakerD(43)=1.544;
tabSpeakerX(44)=-1.000;
tabSpeakerY(44)=0.620;
tabSpeakerZ(44)=-0.500;
tabSpeakerD(44)=1.278;
tabSpeakerX(45)=-1.000;
tabSpeakerY(45)=0.620;
tabSpeakerZ(45)=0.000;
tabSpeakerD(45)=1.177;
tabSpeakerX(46)=-1.000;
tabSpeakerY(46)=0.620;
tabSpeakerZ(46)=0.500;
tabSpeakerD(46)=1.278;
tabSpeakerX(47)=-1.000;
tabSpeakerY(47)=0.620;
tabSpeakerZ(47)=1.000;
tabSpeakerD(47)=1.544;
tabSpeakerX(48)=-0.393;
tabSpeakerY(48)=-1.000;
tabSpeakerZ(48)=-0.399;
tabSpeakerD(48)=1.146;
tabSpeakerX(49)=-0.002;
tabSpeakerY(49)=-1.000;
tabSpeakerZ(49)=-0.399;
tabSpeakerD(49)=1.077;
tabSpeakerX(50)=0.402;
tabSpeakerY(50)=-1.000;
tabSpeakerZ(50)=-0.399;
tabSpeakerD(50)=1.149;
tabSpeakerX(51)=-0.398;
tabSpeakerY(51)=-1.000;
tabSpeakerZ(51)=0.000;
tabSpeakerD(51)=1.076;
tabSpeakerX(52)=0.000;
tabSpeakerY(52)=-1.000;
tabSpeakerZ(52)=0.000;
tabSpeakerD(52)=1.000;
tabSpeakerX(53)=0.407;
tabSpeakerY(53)=-1.000;
tabSpeakerZ(53)=0.000;
tabSpeakerD(53)=1.080;
tabSpeakerX(54)=-0.393;
tabSpeakerY(54)=-1.000;
tabSpeakerZ(54)=0.404;
tabSpeakerD(54)=1.148;
tabSpeakerX(55)=0.002;
tabSpeakerY(55)=-1.000;
tabSpeakerZ(55)=0.409;
tabSpeakerD(55)=1.080;
tabSpeakerX(56)=0.407;
tabSpeakerY(56)=-1.000;
tabSpeakerZ(56)=0.409;
tabSpeakerD(56)=1.155;
tabSpeakerX(57)=-0.244;
tabSpeakerY(57)=1.000;
tabSpeakerZ(57)=-0.399;
tabSpeakerD(57)=1.104;
tabSpeakerX(58)=0.249;
tabSpeakerY(58)=1.000;
tabSpeakerZ(58)=-0.399;
tabSpeakerD(58)=1.105;
tabSpeakerX(59)=-0.383;
tabSpeakerY(59)=1.000;
tabSpeakerZ(59)=0.010;
tabSpeakerD(59)=1.071;
tabSpeakerX(60)=0.000;
tabSpeakerY(60)=1.000;
tabSpeakerZ(60)=0.000;
tabSpeakerD(60)=1.000;
tabSpeakerX(61)=0.407;
tabSpeakerY(61)=1.000;
tabSpeakerZ(61)=0.005;
tabSpeakerD(61)=1.080;
tabSpeakerX(62)=-0.225;
tabSpeakerY(62)=1.000;
tabSpeakerZ(62)=0.404;
tabSpeakerD(62)=1.102;
tabSpeakerX(63)=0.254;
tabSpeakerY(63)=1.000;
tabSpeakerZ(63)=0.404;
tabSpeakerD(63)=1.108;
dtencGen(in, out) = sqrt(pow(tabSpeakerX(out)-x(in),2) + pow(tabSpeakerY(out)-y(in),2) + pow(tabSpeakerZ(out)-z(in),2));
dgain(in, out) = ba.db2linear((-50/tabSpeakerD(out))*dtencGen(in,out));
x(i) = hslider("/X%i",0,-1,1,0.01);
y(i) = hslider("/Y%i",0,-1,1,0.01);
z(i) = hslider("/Z%i",0,-1,1,0.01);
Fader(in,out)= vgroup("[1]Input %2in",dgain(in,out));
cdistance(in)=sqrt(pow(0-x(in),2) + pow(0-y(in),2) + pow(0-z(in),2));
paramDistance(x)=hgroup("[2]Distance",x);
//-----------------------------------------------------------
//                   LPF 
//-----------------------------------------------------------
minfreq=paramDistance(vslider("LPF Min",100, 20, 2000, 1));
ampfreq=paramDistance(vslider("LPF Amp",5000, 20, 19980, 1));
rpf(in)=minfreq+(ampfreq*min(1,cdistance(in))):floor;
LPF(in)=fi.lowpass(3,rpf(in));
fbp = checkbox("[0] Bypass  [tooltip: When this is checked, the filters has no effect]");
filters(in)=paramDistance(vgroup("FILTERS",ba.bypass1(fbp,hgroup("[1]",LPF(in)))));
//-----------------------------------------------------------
//                  Delay
//-----------------------------------------------------------
delay_group(x) = paramDistance(vgroup("[2]DELAY", x));
cbp =delay_group(vgroup("[0]",checkbox("Bypass	[tooltip: When this is checked, Delay has no effect]")));
voice   = delay_group(vgroup("[1]",(+ : de.sdelay(N, interp, dtime)) ~ *(fback)));
N = int(2^19);
interp  = hslider("interpolation[unit:ms][style:knob]",10,1,100,0.1)*ma.SR/1000.0;
maxtime = hslider("maxtime[style:knob]",100,0,5000,0.1);
fback = hslider("feedback[style:knob]",0,0,100,0.1)/100.0;
dtime = maxtime-(maxtime*min(1,cdistance(1))*ma.SR/1000.0);
delay = ba.bypass1(cbp,voice);
//-----------------------------------------------------------
//                 Freeverb
//-----------------------------------------------------------
scaleroom   = 0.28;
offsetroom  = 0.7;
allpassfeed = 0.5;
scaledamp   = 0.4;
fixedgain   = 0.1;
origSR = 48000;
g=1-((1/1.73205)*min(1.73205,cdistance(1)));
freeverbMono=_<: (*(g)*fixedgain :re.mono_freeverb(combfeed, allpassfeed, damping, spatSpread)),*(1-g):> _;
parameters(x) = paramDistance(hgroup("[3]Freeverb",x));
knobGroup(x) = parameters(vgroup("[1]",x));
fvbp = knobGroup(checkbox("[0] Bypass	[tooltip: When this is checked, the freeverb	has no effect]"));
damping = knobGroup(vslider("[1] Damp [style: knob] [tooltip: Somehow control the density of the reverb.]",0.5, 0, 1, 0.025)*scaledamp*origSR/ma.SR);
combfeed = knobGroup(vslider("[2] RoomSize [style: knob] [tooltip: The room size	between 0 and 1 with 1 for the largest room.]", 0.5, 0, 1, 0.025)*scaleroom*origSR/ma.SR + offsetroom);
spatSpread = knobGroup(vslider("[3] Stereo Spread [style: knob] [tooltip: Spatial spread between 0 and 1 with 1 for maximum spread.]",0.5,0,1,0.01)*46*ma.SR/origSR: int);
freeverb(in) = ba.bypass1(fvbp,freeverbMono);
};
process = Matrix(1,64); // le deuxième chiffre permet de définir la dimension de votre espace :9,10, ...

